//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

use crate::db::types::DiscordId;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub id: DiscordId,
  pub messages: i64,
  pub commands: i64,
  pub name: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(has_many = "super::status::Entity")]
  Status,
}

impl Related<super::status::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Status.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
